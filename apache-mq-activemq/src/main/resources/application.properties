# ActiveMQ: 解决高并发场景下的问题
server.port=8082
# url必须以jdbc开头,否则启动报错
spring.datasource.url=jdbc:mysql://xxxx

# 注意:8161为管理页面端口,不是服务端口,服务端口是61616
# exception is javax.jms.JMSException: Could not connect to broker URL: tcp://127.0.0.1:61616. Reason: java.net.BindException: Address already in use: connect;
# 改tcp://127.0.0.1:61616  -> tcp://0.0.0.0:61616
spring.activemq.broker-url=tcp://0.0.0.0:61616
# 登录用户名
spring.activemq.user=admin
# 密码
spring.activemq.password=admin
# 在完全关闭前等待的时间
spring.activemq.close-timeout=15s
# 是否在内存中构建一个activemq，默认true,如果显式定义broker则忽略此属性。
spring.activemq.in-memory=false
spring.activemq.non-blocking-redelivery=false
# 等待消息发送响应的时间。默认0永远等待
spring.activemq.send-timeout=0

# 自定义的常量,用以activeMQ动态配置
spring.activemq.queue-name=active.queue
spring.activemq.topic-name=active.topic

# 连接池配置
# 是否使用连接池,默认false
#spring.activemq.pool.enabled=false
# 最大连接数,默认1
#spring.activemq.pool.max-connections=1
# 连接空闲过期时间，默认30
#spring.activemq.pool.idle-timeout=30s
# 连接过期时间，不管是否空闲
#spring.activemq.pool.expiry-timeout=0
#  每个连接的有效会话的最大数目，默认500
#spring.activemq.pool.max-sessions-per-connection=500
# 发生"JMSException"时尝试重新连接，默认true
# spring.activemq.pool.reconnect-on-exception=true
#空闲连接清除线程检查时间间隔，默认-1，从不检查。
#spring.activemq.pool.time-between-expiration-check=-1ms
#是否只使用一个MessageProducer
#spring.activemq.pool.use-anonymous-producers=true

#默认值false, activemq提供queue模式
#spring.jms.pub-sub-domain=false

# 是否信任所有包,如果不信任,在消息类型转换的时候会报错
#spring.activemq.packages.trust-all=false
# 要信任的特定包的逗号分隔列表（当不信任所有包时）
#spring.activemq.packages.trusted=

# 当连接请求和池满时是否阻塞。设置false会抛“JMSException异常”。
# 默认true
spring.activemq.pool.block-if-full=true
# 如果池仍然满，则在抛出异常前阻塞时间。默认-1ms
spring.activemq.pool.block-if-full-timeout=-1ms
# 是否在启动时创建连接。可以在启动时用于加热池。默认true
#spring.activemq.pool.create-connection-on-startup=true