<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zj.test.mybatis.mapper.zj.DynamicSqlTestMapper">

	<sql id="table_name">
		book
	</sql>

	<!--1.where + if 标签测试-->
	<select id="selectWithIf" resultType="com.zj.test.mybatis.controller.zj.dynamicsql.po.BookPO">
		select * from <include refid="table_name"/>

		<where>
			<!--1.1.where只能去除前and，不能移除后and，当有连续的前and时，只会移除第一个

            1.2.if test条件的书写：
            test中不等于: !=，不能使用is not null和is null
            test中且: and
            test中或: or

            1.3./**/注释不能放在标签如<select>内，否则会作为sql语句的内容。
            如果想要添加注释请使用<!
			-->
			<if test="bookName != null">
				and book_name=#{bookName}
			</if>
			<if test="authorName!=null">
				and author_name=#{authorName}
			</if>
		</where>
	    limit 5;
	</select>

	<!--2.in + foreach标签测试
	foreach标签属性：
	item: 指定collection中元素的引用名
	open,close: 字符串拼接开始、结束字符串
	separator: 分隔符
	005.应在<foreach></foreach>之间添加值引用表达式
	-->
	<select id="selectWithForeach" resultType="com.zj.test.mybatis.controller.zj.dynamicsql.po.BookPO">
		select * from <include refid="table_name"/>
		where book_name in
		<foreach collection="list" open="(" close=")" separator="," item="bookname">
			#{bookname}
		</foreach>
	</select>

	<!--3.choose + when 测试
	常常用where包围choose内容，以避免and多余导致的语法错误。
	choose相当于swtich,when相当于case,otherwise相当于default

	注：
	when按照书写的顺序进行判断
	otherwise标签必须写在when的后面，且至多只有一个。

	测试场景：
	通过bId或book_name查找书籍,如果bId和book_name参数同时存在，则通过bId查询,
	如果bId和book_name参数都没有，则默认返回书名为价值的书。
	-->
	<select id="selectByWhereAndChoose" resultType="com.zj.test.mybatis.controller.zj.dynamicsql.po.BookPO">
		select bId,book_name as bookName,author_name as authorName,create_time from <include refid="table_name"/>
		<where>
			<choose>
				<when test="bId!=null">
			        and bId = #{bId}
				</when>

				<when test="bookName!=null">
					and book_name = #{bookName}
				</when>

				<!--如果没有传递参数，默认返回书名为价值的书
				由于xml限制，otherwise标签必须在when后面，且最多只有一个。-->
				<otherwise>
					and book_name='价值'
				</otherwise>
			</choose>
		</where>

	</select>
</mapper>