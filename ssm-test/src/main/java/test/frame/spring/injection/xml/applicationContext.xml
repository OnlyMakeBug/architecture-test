<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:task="http://www.springframework.org/schema/task"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-4.0.xsd
    http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-4.0.xsd">
	<!-- 1.创建对象bean -->
	<!-- 1.1.通过构造函数 -->
	<!-- student bean -->
	<!-- 如果没有指定name/id,则不能通过bean name获取,因为spring不会为bean设置默认bean name -->
	<bean id="student1" class="test.frame.spring.injection.xml.bean.Student" destroy-method="destroyMethod">
		<!-- 2.属性注入 -->
		<!-- 2.1.property注入，要求属性必须有setter方法，对getter没有要求。 -->
		<!-- 会自动将字符串转换成对应的类型 -->
		<!-- String类型不会移除空格 -->
		<property name="name" value="zhoujian  "></property>
		<!-- 数值类型会移除所有的空格:相当于value="18" -->
		<property name="age" value="    1   8     "></property>
		<!-- 可选值:true/false,0/1 -->
		<!-- 如果是0/1会移除多余的空格，然后转换成boolean类型 -->
		<!-- 如果是true/false,两端可以有空格，但是字符串之间不能有空格,如Invalid boolean value [     tru e ] -->
		<property name="oldEnough" value="     true "></property>
	</bean>
	
	<bean id="student2" class="test.frame.spring.injection.xml.bean.Student" destroy-method="destroyMethod">
		<!-- 2.2.构造方法注入,如果不指定构造方法,会调用默认构造函数,因此如果有其他有参构造函数,则需要显示定义无参构造函数 -->
		<!-- 如果只指定name,age,会选择class中最后一个符合的构造函数 -->
		<constructor-arg name="name" value="student2"></constructor-arg>
		<constructor-arg name="age" value="16"></constructor-arg>
	</bean>
	
	<!-- 1.2.静态工厂方法: 工厂类为class -->
	<!-- 工厂方法必须定义为静态 -->
	<bean id="student3" class="test.frame.spring.injection.xml.bean.Student" factory-method="createStudent" destroy-method="destroyMethod">
	</bean>
	
	<!-- 1.3.工厂方法: 工厂为其他bean -->
	<!-- 工厂方法必须定义为非静态 -->
	<!-- 当bean scopre属性prototype,通过getBean("student4") 获取的实例不是同一个，只有当获取的时候才会创建。 -->
	<bean id="student4" class="test.frame.spring.injection.xml.bean.Student" scope="prototype"
	factory-method="createStudent" factory-bean="studentFactoryBean" init-method="initMethod"
	p:name="student4">
	<!-- 引用类型: p:field-ref -->
	</bean>
	
	<!-- 工厂bean -->
	<bean id="studentFactoryBean" class="test.frame.spring.injection.xml.bean.StudentFactoryBean">
	</bean>
	
</beans>